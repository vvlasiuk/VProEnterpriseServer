import uvicorn
from typing import Dict, Any
from app.core.config import settings
from app.core.localization import i18n

def get_ssl_config() -> Dict[str, Any]:
    """–û—Ç—Ä–∏–º–∞–Ω–Ω—è SSL –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"""
    ssl_params = {}
    
    if hasattr(settings, 'USE_SSL') and settings.USE_SSL:
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç—ñ–≤
        if not hasattr(settings, 'SSL_KEYFILE') or not settings.SSL_KEYFILE:
            print("‚ö†Ô∏è SSL —É–≤—ñ–º–∫–Ω–µ–Ω–æ, –∞–ª–µ SSL_KEYFILE –Ω–µ –≤–∫–∞–∑–∞–Ω–æ")
            return {}
        
        if not hasattr(settings, 'SSL_CERTFILE') or not settings.SSL_CERTFILE:
            print("‚ö†Ô∏è SSL —É–≤—ñ–º–∫–Ω–µ–Ω–æ, –∞–ª–µ SSL_CERTFILE –Ω–µ –≤–∫–∞–∑–∞–Ω–æ")
            return {}
        
        ssl_params = {
            "ssl_keyfile": settings.SSL_KEYFILE,
            "ssl_certfile": settings.SSL_CERTFILE
        }
        
        # –î–æ–¥–∞—Ç–∏ –ø–∞—Ä–æ–ª—å —è–∫—â–æ —î
        if hasattr(settings, 'SSL_KEYFILE_PASSWORD') and settings.SSL_KEYFILE_PASSWORD:
            ssl_params["ssl_keyfile_password"] = settings.SSL_KEYFILE_PASSWORD
    
    return ssl_params

def print_server_info():
    """–í–∏–≤–µ–¥–µ–Ω–Ω—è —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ —Å–µ—Ä–≤–µ—Ä"""
    host = str(settings.HOST)
    port = int(settings.PORT)
    reload = bool(settings.DEBUG)
    ssl_params = get_ssl_config()
    
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞:")
    print(f"  üìç Host: {host}")
    print(f"  üîå Port: {port}")
    print(f"  üåç Environment: {'Development' if settings.DEBUG else 'Production'}")
    print(f"  üîÑ Reload: {reload}")
    print(f"  üó£Ô∏è Available languages: {i18n.get_available_languages()}")
    
    if ssl_params:
        print(f"  üîí SSL: Enabled")
        print(f"  üìú Certificate: {settings.SSL_CERTFILE}")
        print(f"  üîë Key file: {settings.SSL_KEYFILE}")
    else:
        print(f"  üîì SSL: Disabled")
    
    return host, port, reload, ssl_params

def start_server(app_module: str = "main:app"):
    """–ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∑ –æ–±—Ä–æ–±–∫–æ—é –ø–æ–º–∏–ª–æ–∫"""
    host, port, reload, ssl_params = print_server_info()
    
    try:
        uvicorn.run(
            app_module,
            host=host,
            port=port,
            reload=reload,
            **ssl_params
        )
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É: {e}")
        print_fallback_commands(ssl_params)

def print_fallback_commands(ssl_params: Dict[str, Any]):
    """–í–∏–≤–µ–¥–µ–Ω–Ω—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏—Ö –∫–æ–º–∞–Ω–¥ –∑–∞–ø—É—Å–∫—É"""
    print("\nüí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –∑–∞–ø—É—Å–∫—É:")
    
    if ssl_params:
        print("üìã –ó SSL —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫:")
        cmd = f"uvicorn main:app --ssl-keyfile {ssl_params.get('ssl_keyfile')} --ssl-certfile {ssl_params.get('ssl_certfile')}"
        if 'ssl_keyfile_password' in ssl_params:
            cmd += f" --ssl-keyfile-password {ssl_params['ssl_keyfile_password']}"
        if settings.DEBUG:
            cmd += " --reload"
        print(f"  {cmd}")
    
    print("üìã –ë–µ–∑ SSL —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥–Ω–∏–π —Ä—è–¥–æ–∫:")
    cmd = "uvicorn main:app"
    if settings.HOST != "0.0.0.0":
        cmd += f" --host {settings.HOST}"
    if settings.PORT != 8000:
        cmd += f" --port {settings.PORT}"
    if settings.DEBUG:
        cmd += " --reload"
    print(f"  {cmd}")
    
    print("üìã –ß–µ—Ä–µ–∑ Python:")
    print(f"  python main.py")