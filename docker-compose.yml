version: '3.8'

services:
  # FastAPI додаток
  vpro-server:
    build: .
    container_name: vpro-enterprise-server
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DB_SERVER=sqlserver
      - DB_DATABASE=VProEnterpriseDB
      - DB_USERNAME=sa
      - DB_PASSWORD=${DB_PASSWORD}
      - DEBUG=false
      - CURRENT_LANGUAGE=uk
      - JWT_SECRET_KEY=${JWT_SECRET}
    volumes:
      - ./logs:/app/logs
      - ./.env.production:/app/.env
    depends_on:
      - sqlserver
    networks:
      - vpro-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SQL Server
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: vpro-sqlserver
    restart: unless-stopped
    environment:
      - SA_PASSWORD=${DB_PASSWORD}
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - vpro-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: vpro-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - vpro-server
    networks:
      - vpro-network

  # Redis для кешування (опціонально)
  redis:
    image: redis:alpine
    container_name: vpro-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - vpro-network

volumes:
  sqlserver_data:
  redis_data:

networks:
  vpro-network:
    driver: bridge